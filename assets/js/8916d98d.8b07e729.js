"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["95525"],{269894:function(e,t,n){n.r(t),n.d(t,{metadata:()=>a,contentTitle:()=>s,default:()=>h,assets:()=>c,toc:()=>i,frontMatter:()=>o});var a=JSON.parse('{"id":"data-operate/import/import-scenes/external-table-load","title":"Synchronize data through external table","description":"\x3c!--","source":"@site/versioned_docs/version-1.2/data-operate/import/import-scenes/external-table-load.md","sourceDirName":"data-operate/import/import-scenes","slug":"/data-operate/import/import-scenes/external-table-load","permalink":"/docs/1.2/data-operate/import/import-scenes/external-table-load","draft":false,"unlisted":false,"tags":[],"version":"1.2","frontMatter":{"title":"Synchronize data through external table","language":"en"},"sidebar":"docs","previous":{"title":"Kafka Data Subscription","permalink":"/docs/1.2/data-operate/import/import-scenes/kafka-load"},"next":{"title":"Synchronize data using Insert method","permalink":"/docs/1.2/data-operate/import/import-scenes/jdbc-load"}}'),r=n("785893"),l=n("250065");let o={title:"Synchronize data through external table",language:"en"},s="Synchronize data through external table",c={},i=[{value:"Create external table",id:"create-external-table",level:2},{value:"Import Data",id:"import-data",level:2},{value:"Precautions",id:"precautions",level:2}];function d(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,l.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"synchronize-data-through-external-table",children:"Synchronize data through external table"})}),"\n",(0,r.jsxs)(t.p,{children:["Doris can create external tables. Once created, you can query the data of the external table directly with the SELECT statement or import the data of the external table with the ",(0,r.jsx)(t.code,{children:"INSERT INTO SELECT"})," method."]}),"\n",(0,r.jsx)(t.p,{children:"Doris external tables currently support the following data sources."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"MySQL"}),"\n",(0,r.jsx)(t.li,{children:"Oracle"}),"\n",(0,r.jsx)(t.li,{children:"PostgreSQL"}),"\n",(0,r.jsx)(t.li,{children:"SQLServer"}),"\n",(0,r.jsx)(t.li,{children:"Hive"}),"\n",(0,r.jsx)(t.li,{children:"Iceberg"}),"\n",(0,r.jsx)(t.li,{children:"ElasticSearch"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"This document describes how to create external tables accessible through the ODBC protocol and how to import data from these external tables."}),"\n",(0,r.jsx)(t.h2,{id:"create-external-table",children:"Create external table"}),"\n",(0,r.jsxs)(t.p,{children:["For a detailed introduction to creating ODBC external tables, please refer to the ",(0,r.jsx)(t.a,{href:"../../../sql-manual/sql-reference/Data-Definition-Statements/Create/CREATE-EXTERNAL-TABLE.md",children:"CREATE ODBC TABLE"})," syntax help manual."]}),"\n",(0,r.jsx)(t.p,{children:"Here is just an example of how to use it."}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Create an ODBC Resource"}),"\n",(0,r.jsx)(t.p,{children:"The purpose of ODBC Resource is to manage the connection information of external tables uniformly."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:'CREATE EXTERNAL RESOURCE `oracle_test_odbc`\nPROPERTIES (\n    "type" = "odbc_catalog",\n    "host" = "192.168.0.1",\n    "port" = "8086",\n    "user" = "oracle",\n    "password" = "oracle",\n    "database" = "oracle",\n    "odbc_type" = "oracle",\n    "driver" = "Oracle"\n);\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["Here we have created a Resource named ",(0,r.jsx)(t.code,{children:"oracle_test_odbc"}),", whose type is ",(0,r.jsx)(t.code,{children:"odbc_catalog"}),", indicating that this is a Resource used to store ODBC information. ",(0,r.jsx)(t.code,{children:"odbc_type"})," is ",(0,r.jsx)(t.code,{children:"oracle"}),", indicating that this OBDC Resource is used to connect to the Oracle database. For other types of resources, see the ",(0,r.jsx)(t.a,{href:"/docs/1.2/advanced/resource",children:"resource management"})," documentation for details."]}),"\n",(0,r.jsxs)(t.ol,{start:"2",children:["\n",(0,r.jsx)(t.li,{children:"Create an external table"}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:'CREATE EXTERNAL TABLE `ext_oracle_demo` (\n  `k1` decimal(9, 3) NOT NULL COMMENT "",\n  `k2` char(10) NOT NULL COMMENT "",\n  `k3` datetime NOT NULL COMMENT "",\n  `k5` varchar(20) NOT NULL COMMENT "",\n  `k6` double NOT NULL COMMENT ""\n) ENGINE=ODBC\nCOMMENT "ODBC"\nPROPERTIES (\n    "odbc_catalog_resource" = "oracle_test_odbc",\n    "database" = "oracle",\n    "table" = "baseall"\n);\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Here we create an ",(0,r.jsx)(t.code,{children:"ext_oracle_demo"})," external table and reference the ",(0,r.jsx)(t.code,{children:"oracle_test_odbc"})," Resource created earlier"]}),"\n",(0,r.jsx)(t.h2,{id:"import-data",children:"Import Data"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Create the Doris table"}),"\n",(0,r.jsxs)(t.p,{children:["Here we create a Doris table with the same column information as the external table ",(0,r.jsx)(t.code,{children:"ext_oracle_demo"})," created in the previous step:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:'CREATE TABLE `doris_oralce_tbl` (\n  `k1` decimal(9, 3) NOT NULL COMMENT "",\n  `k2` char(10) NOT NULL COMMENT "",\n  `k3` datetime NOT NULL COMMENT "",\n  `k5` varchar(20) NOT NULL COMMENT "",\n  `k6` double NOT NULL COMMENT ""\n)\nCOMMENT "Doris Table"\nDISTRIBUTED BY HASH(k1) BUCKETS 2\nPROPERTIES (\n    "replication_num" = "1"\n);\n'})}),"\n",(0,r.jsxs)(t.p,{children:["For detailed instructions on creating Doris tables, see ",(0,r.jsx)(t.a,{href:"/docs/1.2/sql-manual/sql-reference/Data-Definition-Statements/Create/CREATE-TABLE",children:"CREATE-TABLE"})," syntax help."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:["Import data (from ",(0,r.jsx)(t.code,{children:"ext_oracle_demo"})," table to ",(0,r.jsx)(t.code,{children:"doris_oralce_tbl"})," table)"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sql",children:"INSERT INTO doris_oralce_tbl SELECT k1,k2,k3 FROM ext_oracle_demo limit 200\n"})}),"\n",(0,r.jsx)(t.p,{children:"The INSERT command is a synchronous command, and a successful return indicates that the import was successful."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"precautions",children:"Precautions"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"It must be ensured that the external data source and the Doris cluster can communicate with each other, including the network between the BE node and the external data source."}),"\n",(0,r.jsx)(t.li,{children:"ODBC external tables essentially access the data source through a single ODBC client, so it is not suitable to import a large amount of data at one time. It is recommended to import multiple times in batches."}),"\n"]})]})}function h(e={}){let{wrapper:t}={...(0,l.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},250065:function(e,t,n){n.d(t,{Z:function(){return s},a:function(){return o}});var a=n(667294);let r={},l=a.createContext(r);function o(e){let t=a.useContext(l);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(l.Provider,{value:t},e.children)}}}]);