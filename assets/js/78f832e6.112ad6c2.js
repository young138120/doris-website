"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["948846"],{739288:function(e,n,i){i.r(n),i.d(n,{metadata:()=>s,contentTitle:()=>a,default:()=>h,assets:()=>o,toc:()=>c,frontMatter:()=>l});var s=JSON.parse('{"id":"sql-manual/sql-reference/Data-Types/DECIMALV3","title":"DECIMALV3","description":"\x3c!--","source":"@site/versioned_docs/version-1.2/sql-manual/sql-reference/Data-Types/DECIMALV3.md","sourceDirName":"sql-manual/sql-reference/Data-Types","slug":"/sql-manual/sql-reference/Data-Types/DECIMALV3","permalink":"/docs/1.2/sql-manual/sql-reference/Data-Types/DECIMALV3","draft":false,"unlisted":false,"tags":[],"version":"1.2","frontMatter":{"title":"DECIMALV3","language":"en"},"sidebar":"docs","previous":{"title":"DECIMAL","permalink":"/docs/1.2/sql-manual/sql-reference/Data-Types/DECIMAL"},"next":{"title":"DATE","permalink":"/docs/1.2/sql-manual/sql-reference/Data-Types/DATE"}}'),r=i("785893"),t=i("250065");let l={title:"DECIMALV3",language:"en"},a=void 0,o={},c=[{value:"DECIMALV3",id:"decimalv3",level:2},{value:"Description",id:"description",level:3},{value:"Precision Deduction",id:"precision-deduction",level:3},{value:"Arithmetic Expressions",id:"arithmetic-expressions",level:4},{value:"Aggregation functions",id:"aggregation-functions",level:4},{value:"Default rules",id:"default-rules",level:4},{value:"Adjust the result precision",id:"adjust-the-result-precision",level:4},{value:"Why DECIMALV3 is required",id:"why-decimalv3-is-required",level:3},{value:"keywords",id:"keywords",level:3}];function d(e){let n={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",version:"version",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"decimalv3",children:"DECIMALV3"}),"\n",(0,r.jsxs)(n.version,{since:"1.2.1",children:["\n",(0,r.jsx)(n.p,{children:"DECIMALV3"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,r.jsx)(n.p,{children:"DECIMALV3 (M [,D])"}),"\n",(0,r.jsx)(n.p,{children:"High-precision fixed-point number, M represents the total number of significant digits, and D represents the scale."}),"\n",(0,r.jsx)(n.p,{children:"The range of M is [1, 38], and the range of D is [0, precision]."}),"\n",(0,r.jsx)(n.p,{children:"The default value is DECIMALV3(9, 0)."}),"\n",(0,r.jsx)(n.h3,{id:"precision-deduction",children:"Precision Deduction"}),"\n",(0,r.jsx)(n.p,{children:"DECIMALV3 has a very complex set of type inference rules. For different expressions, different rules will be applied for precision inference."}),"\n",(0,r.jsx)(n.h4,{id:"arithmetic-expressions",children:"Arithmetic Expressions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Plus / Minus: DECIMALV3(a, b) + DECIMALV3(x, y) -> DECIMALV3(max(a - b, x - y) + max(b, y) + 1, max(b, y))."}),"\n",(0,r.jsx)(n.li,{children:"Multiply: DECIMALV3(a, b) + DECIMALV3(x, y) -> DECIMALV3(a + x, b + y)."}),"\n",(0,r.jsx)(n.li,{children:"Divide: DECIMALV3(a, b) + DECIMALV3(x, y) -> DECIMALV3(a + y, b)."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"aggregation-functions",children:"Aggregation functions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"SUM / MULTI_DISTINCT_SUM: SUM(DECIMALV3(a, b)) -> DECIMALV3(38, b)."}),"\n",(0,r.jsx)(n.li,{children:"AVG: AVG(DECIMALV3(a, b)) -> DECIMALV3(38, max(b, 4))."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"default-rules",children:"Default rules"}),"\n",(0,r.jsxs)(n.p,{children:["Except for the expressions mentioned above, other expressions use default rules for precision deduction. That is, for the expression ",(0,r.jsx)(n.code,{children:"expr(DECIMALV3(a, b))"}),", the result type is also DECIMALV3(a, b)."]}),"\n",(0,r.jsx)(n.h4,{id:"adjust-the-result-precision",children:"Adjust the result precision"}),"\n",(0,r.jsxs)(n.p,{children:["Different users have different accuracy requirements for DECIMALV3. The above rules are the default behavior of Doris. If users ",(0,r.jsx)(n.strong,{children:"have different accuracy requirements, they can adjust the accuracy in the following ways"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If the expected result precision is greater than the default precision, you can adjust the result precision by adjusting the parameter's precision. For example, if the user expects to calculate ",(0,r.jsx)(n.code,{children:"AVG(col)"})," and get DECIMALV3(x, y) as the result, where the type of ",(0,r.jsx)(n.code,{children:"col"})," is DECIMALV3 (a, b), the expression can be rewritten to ",(0,r.jsx)(n.code,{children:"AVG(CAST(col as DECIMALV3 (x, y))"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["If the expected result precision is less than the default precision, the desired precision can be obtained by approximating the output result. For example, if the user expects to calculate ",(0,r.jsx)(n.code,{children:"AVG(col)"})," and get DECIMALV3(x, y) as the result, where the type of ",(0,r.jsx)(n.code,{children:"col"})," is DECIMALV3(a, b), the expression can be rewritten as ",(0,r.jsx)(n.code,{children:"ROUND(AVG(col), y)"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"why-decimalv3-is-required",children:"Why DECIMALV3 is required"}),"\n",(0,r.jsx)(n.p,{children:"DECIMALV3 in Doris is a real high-precision fixed-point number. Compared with the old version of Decimal, DecimalV3 has the following core advantages:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"It can represent a wider range. The value ranges of both precision and scale in DECIMALV3 have been significantly expanded."}),"\n",(0,r.jsx)(n.li,{children:"Higher performance. The old version of DECIMAL requires 16 bytes in memory and 12 bytes in storage, while DECIMALV3 has made adaptive adjustments as shown below."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"+----------------------+------------------------------+\n|     precision        | Space occupied (memory/disk) |\n+----------------------+------------------------------+\n| 0 < precision <= 8   |            4 bytes           |\n+----------------------+------------------------------+\n| 8 < precision <= 18  |            8 bytes           |\n+----------------------+------------------------------+\n| 18 < precision <= 38 |           16 bytes           |\n+----------------------+------------------------------+\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"More complete precision deduction. For different expressions, different precision inference rules are applied to deduce the precision of the results."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"keywords",children:"keywords"}),"\n",(0,r.jsx)(n.p,{children:"DECIMALV3"})]})}function h(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},250065:function(e,n,i){i.d(n,{Z:function(){return a},a:function(){return l}});var s=i(667294);let r={},t=s.createContext(r);function l(e){let n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);