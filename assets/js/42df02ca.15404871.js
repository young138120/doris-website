"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["378500"],{58346:function(e,n,t){t.r(n),t.d(n,{metadata:()=>i,contentTitle:()=>l,default:()=>d,assets:()=>c,toc:()=>r,frontMatter:()=>o});var i=JSON.parse('{"id":"sql-manual/sql-functions/bitmap-functions/bitmap-union","title":"BITMAP_UNION","description":"\x3c!--","source":"@site/docs/sql-manual/sql-functions/bitmap-functions/bitmap-union.md","sourceDirName":"sql-manual/sql-functions/bitmap-functions","slug":"/sql-manual/sql-functions/bitmap-functions/bitmap-union","permalink":"/docs/dev/sql-manual/sql-functions/bitmap-functions/bitmap-union","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"BITMAP_UNION","language":"en"},"sidebar":"docs","previous":{"title":"BITMAP_AND","permalink":"/docs/dev/sql-manual/sql-functions/bitmap-functions/bitmap-and"},"next":{"title":"BITMAP_XOR","permalink":"/docs/dev/sql-manual/sql-functions/bitmap-functions/bitmap-xor"}}'),s=t("785893"),a=t("250065");let o={title:"BITMAP_UNION",language:"en"},l=void 0,c={},r=[{value:"bitmap_union function",id:"bitmap_union-function",level:2},{value:"description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"example",id:"example",level:3},{value:"keywords",id:"keywords",level:3}];function u(e){let n={code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"bitmap_union-function",children:"bitmap_union function"}),"\n",(0,s.jsx)(n.h3,{id:"description",children:"description"}),"\n",(0,s.jsx)(n.p,{children:"Aggregate function, used to calculate the grouped bitmap union. Common usage scenarios such as: calculating PV, UV."}),"\n",(0,s.jsx)(n.h4,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"BITMAP BITMAP_UNION(BITMAP value)"})}),"\n",(0,s.jsx)(n.p,{children:"Enter a set of bitmap values, find the union of this set of bitmap values, and return."}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysql> select page_id, bitmap_union(user_id) from table group by page_id;\n"})}),"\n",(0,s.jsx)(n.p,{children:"Combined with the bitmap_count function, the PV data of the web page can be obtained"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysql> select page_id, bitmap_count(bitmap_union(user_id)) from table group by page_id;\n"})}),"\n",(0,s.jsx)(n.p,{children:"When the user_id field is int, the above query semantics is equivalent to"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"mysql> select page_id, count(distinct user_id) from table group by page_id;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"keywords",children:"keywords"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"BITMAP_UNION, BITMAP\n"})})]})}function d(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return l},a:function(){return o}});var i=t(667294);let s={},a=i.createContext(s);function o(e){let n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);