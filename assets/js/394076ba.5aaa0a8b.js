"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["951799"],{753215:function(e,n,r){r.r(n),r.d(n,{metadata:()=>s,contentTitle:()=>t,default:()=>h,assets:()=>l,toc:()=>d,frontMatter:()=>o});var s=JSON.parse('{"id":"data-operate/import/import-way/spark-load-manual","title":"Spark Load","description":"\x3c!--","source":"@site/versioned_docs/version-1.2/data-operate/import/import-way/spark-load-manual.md","sourceDirName":"data-operate/import/import-way","slug":"/data-operate/import/import-way/spark-load-manual","permalink":"/docs/1.2/data-operate/import/import-way/spark-load-manual","draft":false,"unlisted":false,"tags":[],"version":"1.2","frontMatter":{"title":"Spark Load","language":"en"},"sidebar":"docs","previous":{"title":"Routine Load","permalink":"/docs/1.2/data-operate/import/import-way/routine-load-manual"},"next":{"title":"Stream load","permalink":"/docs/1.2/data-operate/import/import-way/stream-load-manual"}}'),a=r("785893"),i=r("250065");let o={title:"Spark Load",language:"en"},t="Spark Load",l={},d=[{value:"Applicable scenarios",id:"applicable-scenarios",level:2},{value:"Explanation of terms",id:"explanation-of-terms",level:2},{value:"Basic principles",id:"basic-principles",level:2},{value:"Basic process",id:"basic-process",level:3},{value:"Global dictionary",id:"global-dictionary",level:2},{value:"Applicable scenarios",id:"applicable-scenarios-1",level:3},{value:"Build process",id:"build-process",level:3},{value:"Data preprocessing (DPP)",id:"data-preprocessing-dpp",level:2},{value:"Basic process",id:"basic-process-1",level:3},{value:"Hive Bitmap UDF",id:"hive-bitmap-udf",level:2},{value:"Basic operation",id:"basic-operation",level:2},{value:"Configure ETL cluster",id:"configure-etl-cluster",level:3},{value:"Configure spark client",id:"configure-spark-client",level:3},{value:"Configure yarn client",id:"configure-yarn-client",level:3},{value:"Create Load",id:"create-load",level:3},{value:"Show Load",id:"show-load",level:3},{value:"View spark launcher commit log",id:"view-spark-launcher-commit-log",level:3},{value:"cancel load",id:"cancel-load",level:3},{value:"Related system configuration",id:"related-system-configuration",level:2},{value:"FE configuration",id:"fe-configuration",level:3},{value:"Best practices",id:"best-practices",level:2},{value:"Application scenarios",id:"application-scenarios",level:3},{value:"FAQ",id:"faq",level:2},{value:"More Help",id:"more-help",level:2}];function c(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"spark-load",children:"Spark Load"})}),"\n",(0,a.jsx)(n.p,{children:"Spark load realizes the preprocessing of load data by spark, improves the performance of loading large amount of Doris data and saves the computing resources of Doris cluster. It is mainly used for the scene of initial migration and large amount of data imported into Doris."}),"\n",(0,a.jsx)(n.p,{children:"Spark load uses the resources of the spark cluster to sort the data to be imported, and Doris be writes files directly, which can greatly reduce the resource usage of the Doris cluster, and is very good for historical mass data migration to reduce the resource usage and load of the Doris cluster. Effect."}),"\n",(0,a.jsxs)(n.p,{children:["If users do not have the resources of Spark cluster and want to complete the migration of external storage historical data conveniently and quickly, they can use ",(0,a.jsx)(n.a,{href:"/docs/1.2/sql-manual/sql-reference/Data-Manipulation-Statements/Load/BROKER-LOAD",children:"Broker load"})," . Compared with Spark load, importing Broker load will consume more resources on the Doris cluster."]}),"\n",(0,a.jsxs)(n.p,{children:["Spark load is an asynchronous load method. Users need to create spark type load job by MySQL protocol and view the load results by ",(0,a.jsx)(n.code,{children:"show load"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"applicable-scenarios",children:"Applicable scenarios"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"The source data is in a file storage system that spark can access, such as HDFS."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"The data volume ranges from tens of GB to TB."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"explanation-of-terms",children:"Explanation of terms"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Spark ETL: in the load process, it is mainly responsible for ETL of data, including global dictionary construction (bitmap type), partition, sorting, aggregation, etc."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Broker: broker is an independent stateless process. It encapsulates the file system interface and provides the ability of Doris to read the files in the remote storage system."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Global dictionary: it stores the data structure from the original value to the coded value. The original value can be any data type, while the encoded value is an integer. The global dictionary is mainly used in the scene of precise de duplication precomputation."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"basic-principles",children:"Basic principles"}),"\n",(0,a.jsx)(n.h3,{id:"basic-process",children:"Basic process"}),"\n",(0,a.jsx)(n.p,{children:"The user submits spark type load job by MySQL client, Fe records metadata and returns that the user submitted successfully."}),"\n",(0,a.jsx)(n.p,{children:"The implementation of spark load task is mainly divided into the following five stages."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Fe schedules and submits ETL tasks to spark cluster for execution."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Spark cluster executes ETL to complete the preprocessing of load data. It includes global dictionary building (bitmap type), partitioning, sorting, aggregation, etc."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"After the ETL task is completed, Fe obtains the data path of each partition that has been preprocessed, and schedules the related be to execute the push task."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Be reads data through broker and converts it into Doris underlying storage format."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Fe schedule the effective version and complete the load job."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"                 +\n                 | 0. User create spark load job\n            +----v----+\n            |   FE    |---------------------------------+\n            +----+----+                                 |\n                 | 3. FE send push tasks                |\n                 | 5. FE publish version                |\n    +------------+------------+                         |\n    |            |            |                         |\n+---v---+    +---v---+    +---v---+                     |\n|  BE   |    |  BE   |    |  BE   |                     |1. FE submit Spark ETL job\n+---^---+    +---^---+    +---^---+                     |\n    |4. BE push with broker   |                         |\n+---+---+    +---+---+    +---+---+                     |\n|Broker |    |Broker |    |Broker |                     |\n+---^---+    +---^---+    +---^---+                     |\n    |            |            |                         |\n+---+------------+------------+---+ 2.ETL +-------------v---------------+\n|               HDFS              +-------\x3e       Spark cluster         |\n|                                 <-------+                             |\n+---------------------------------+       +-----------------------------+\n\n"})}),"\n",(0,a.jsx)(n.h2,{id:"global-dictionary",children:"Global dictionary"}),"\n",(0,a.jsx)(n.h3,{id:"applicable-scenarios-1",children:"Applicable scenarios"}),"\n",(0,a.jsxs)(n.p,{children:["At present, the bitmap column in Doris is implemented using the class library '",(0,a.jsx)(n.code,{children:"roaingbitmap"}),"', while the input data type of '",(0,a.jsx)(n.code,{children:"roaringbitmap"}),"' can only be integer. Therefore, if you want to pre calculate the bitmap column in the import process, you need to convert the type of input data to integer."]}),"\n",(0,a.jsx)(n.p,{children:"In the existing Doris import process, the data structure of global dictionary is implemented based on hive table, which stores the mapping from original value to encoded value."}),"\n",(0,a.jsx)(n.h3,{id:"build-process",children:"Build process"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Read the data from the upstream data source and generate a hive temporary table, which is recorded as ",(0,a.jsx)(n.code,{children:"hive_table"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Extract the de duplicated values of the fields to be de duplicated from the ",(0,a.jsx)(n.code,{children:"hive_table"}),", and generate a new hive table, which is marked as ",(0,a.jsx)(n.code,{children:"distinct_value_table"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Create a new global dictionary table named ",(0,a.jsx)(n.code,{children:"dict_table"}),"; one column is the original value, and the other is the encoded value."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Left join the ",(0,a.jsx)(n.code,{children:"distinct_value_table"})," and ",(0,a.jsx)(n.code,{children:"dict_table"}),", calculate the new de duplication value set, and then code this set with window function. At this time, the original value of the de duplication column will have one more column of encoded value. Finally, the data of these two columns will be written back to ",(0,a.jsx)(n.code,{children:"dict_table"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Join the ",(0,a.jsx)(n.code,{children:"dict_table"})," with the ",(0,a.jsx)(n.code,{children:"hive_table"})," to replace the original value in the ",(0,a.jsx)(n.code,{children:"hive_table"})," with the integer encoded value."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"hive_table"})," will be read by the next data preprocessing process and imported into Doris after calculation."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"data-preprocessing-dpp",children:"Data preprocessing (DPP)"}),"\n",(0,a.jsx)(n.h3,{id:"basic-process-1",children:"Basic process"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Read data from the data source. The upstream data source can be HDFS file or hive table."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Map the read data, calculate the expression, and generate the bucket field ",(0,a.jsx)(n.code,{children:"bucket_id"})," according to the partition information."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Generate rolluptree according to rollup metadata of Doris table."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Traverse rolluptree to perform hierarchical aggregation. The rollup of the next level can be calculated from the rollup of the previous level."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["After each aggregation calculation, the data will be calculated according to the ",(0,a.jsx)(n.code,{children:"bucket_id"}),"is divided into buckets and then written into HDFS."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Subsequent brokers will pull the files in HDFS and import them into Doris be."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"hive-bitmap-udf",children:"Hive Bitmap UDF"}),"\n",(0,a.jsxs)(n.p,{children:["Spark supports loading hive-generated bitmap data directly into Doris, see ",(0,a.jsx)(n.a,{href:"/docs/1.2/ecosystem/hive-bitmap-udf",children:"hive-bitmap-udf documentation"})]}),"\n",(0,a.jsx)(n.h2,{id:"basic-operation",children:"Basic operation"}),"\n",(0,a.jsx)(n.h3,{id:"configure-etl-cluster",children:"Configure ETL cluster"}),"\n",(0,a.jsx)(n.p,{children:"As an external computing resource, spark is used to complete ETL work in Doris. In the future, there may be other external resources that will be used in Doris, such as spark / GPU for query, HDFS / S3 for external storage, MapReduce for ETL, etc. Therefore, we introduce resource management to manage these external resources used by Doris."}),"\n",(0,a.jsx)(n.p,{children:"Before submitting the spark import task, you need to configure the spark cluster that performs the ETL task."}),"\n",(0,a.jsx)(n.p,{children:"Grammar:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'-- create spark resource\nCREATE EXTERNAL RESOURCE resource_name\nPROPERTIES\n(\n  type = spark,\n  spark_conf_key = spark_conf_value,\n  working_dir = path,\n  broker = broker_name,\n  broker.property_key = property_value,\n  broker.hadoop.security.authentication = kerberos,\n  broker.kerberos_principal = doris@YOUR.COM,\n  broker.kerberos_keytab = /home/doris/my.keytab\n  broker.kerberos_keytab_content = ASDOWHDLAWIDJHWLDKSALDJSDIWALD\n)\n\n-- drop spark resource\nDROP RESOURCE resource_name\n\n-- show resources\nSHOW RESOURCES\nSHOW PROC "/resources"\n\n-- privileges\nGRANT USAGE_PRIV ON RESOURCE resource_name TO user_identity\nGRANT USAGE_PRIV ON RESOURCE resource_name TO ROLE role_name\n\nREVOKE USAGE_PRIV ON RESOURCE resource_name FROM user_identity\nREVOKE USAGE_PRIV ON RESOURCE resource_name FROM ROLE role_name\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Create resource"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"resource_name"})," is the name of the spark resource configured in Doris."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"Properties"})," are the parameters related to spark resources, as follows:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"type"}),": resource type, required. Currently, only spark is supported."]}),"\n",(0,a.jsxs)(n.li,{children:["Spark related parameters are as follows:\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"spark.master"}),": required, yarn is supported at present, ",(0,a.jsx)(n.code,{children:"spark://host:port"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"spark.submit.deployMode"}),": the deployment mode of Spark Program. It is required and supports cluster and client."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"spark.hadoop.fs.defaultfs"}),": required when master is yarn."]}),"\n",(0,a.jsxs)(n.li,{children:["Other parameters are optional, refer to ",(0,a.jsx)(n.code,{children:"http://spark.apache.org/docs/latest/configuration.html"})]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["YARN RM related parameters are as follows\uFF1A\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["If Spark is a single-point RM, you need to configure ",(0,a.jsx)(n.code,{children:"spark.hadoop.yarn.resourcemanager.address"}),"\uFF0Caddress of the single point resource manager."]}),"\n",(0,a.jsxs)(n.li,{children:["If Spark is RM-HA, it needs to be configured (where hostname and address are optional)\uFF1A\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"spark.hadoop.yarn.resourcemanager.ha.enabled"}),": ResourceManager enables HA, set to true."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"spark.hadoop.yarn.resourcemanager.ha.rm-ids"}),": List of ResourceManager logical IDs."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"spark.hadoop.yarn.resourcemanager.hostname.rm-id"}),": For each rm-id, specify the hostname of the ResourceManager."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"spark.hadoop.yarn.resourcemanager.address.rm-id"}),": For each rm-id, specify the host:port for clients to submit jobs."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["HDFS HA related parameters are as follows\uFF1A\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"spark.hadoop.fs.defaultFS"}),", hdfs client default path prefix."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"spark.hadoop.dfs.nameservices"}),", hdfs cluster logical name."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"spark.hadoop.dfs.ha.namenodes.nameservices01"})," , unique identifier for each NameNode in the nameservice."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"spark.hadoop.dfs.namenode.rpc-address.nameservices01.mynamenode1"}),", fully qualified RPC address for each NameNode."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"spark.hadoop.dfs.namenode.rpc-address.nameservices01.mynamenode2"}),", fully qualified RPC address for each NameNode."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"spark.hadoop.dfs.client.failover.proxy.provider"})," = ",(0,a.jsx)(n.code,{children:"org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider"}),", set the implementation class.\n-",(0,a.jsx)(n.code,{children:"working_dir"}),": directory used by ETL. Spark is required when used as an ETL resource. For example: ",(0,a.jsx)(n.code,{children:"hdfs://host :port/tmp/doris"}),"."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"broker.hadoop.security.authentication"}),": Specify the authentication method as kerberos."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"broker.kerberos_principal"}),": Specify the principal of kerberos."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"broker.kerberos_keytab"}),": Specify the path to the keytab file for kerberos. The file must be an absolute path to a file on the server where the broker process is located. And can be accessed by the Broker process."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"broker.kerberos_keytab_content"}),": Specify the content of the keytab file in kerberos after base64 encoding. You can choose one of these with ",(0,a.jsx)(n.code,{children:"broker.kerberos_keytab"})," configuration."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"broker"}),": the name of the broker. Spark is required when used as an ETL resource. You need to use the 'alter system add broker' command to complete the configuration in advance."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"broker.property_key"}),": the authentication information that the broker needs to specify when reading the intermediate file generated by ETL."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"env"}),": Specify the spark environment variable and support dynamic setting. For example, when the authentication mode of Hadoop is simple, set the Hadoop user name and password\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"env.HADOOP_USER_NAME"}),": user name"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"env.HADOOP_USER_PASSWORD"}),": user password"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'-- yarn cluster mode\nCREATE EXTERNAL RESOURCE "spark0"\nPROPERTIES\n(\n  "type" = "spark",\n  "spark.master" = "yarn",\n  "spark.submit.deployMode" = "cluster",\n  "spark.jars" = "xxx.jar,yyy.jar",\n  "spark.files" = "/tmp/aaa,/tmp/bbb",\n  "spark.executor.memory" = "1g",\n  "spark.yarn.queue" = "queue0",\n  "spark.hadoop.yarn.resourcemanager.address" = "127.0.0.1:9999",\n  "spark.hadoop.fs.defaultFS" = "hdfs://127.0.0.1:10000",\n  "working_dir" = "hdfs://127.0.0.1:10000/tmp/doris",\n  "broker" = "broker0",\n  "broker.username" = "user0",\n  "broker.password" = "password0"\n);\n\n-- spark standalone client mode\nCREATE EXTERNAL RESOURCE "spark1"\nPROPERTIES\n(\n  "type" = "spark",\n  "spark.master" = "spark://127.0.0.1:7777",\n  "spark.submit.deployMode" = "client",\n  "working_dir" = "hdfs://127.0.0.1:10000/tmp/doris",\n  "broker" = "broker1"\n);\n\n-- yarn HA mode\nCREATE EXTERNAL RESOURCE sparkHA\nPROPERTIES\n(\n  "type" = "spark",\n  "spark.master" = "yarn",\n  "spark.submit.deployMode" = "cluster",\n  "spark.executor.memory" = "1g",\n  "spark.yarn.queue" = "default",\n  "spark.hadoop.yarn.resourcemanager.ha.enabled" = "true",\n  "spark.hadoop.yarn.resourcemanager.ha.rm-ids" = "rm1,rm2",\n  "spark.hadoop.yarn.resourcemanager.address.rm1" = "xxxx:8032",\n  "spark.hadoop.yarn.resourcemanager.address.rm2" = "xxxx:8032",\n  "spark.hadoop.fs.defaultFS" = "hdfs://nameservices01",\n  "spark.hadoop.dfs.nameservices" = "nameservices01",\n  "spark.hadoop.dfs.ha.namenodes.nameservices01" = "mynamenode1,mynamenode2",\n  "spark.hadoop.dfs.namenode.rpc-address.nameservices01.mynamenode1" = "xxxx:8020",\n  "spark.hadoop.dfs.namenode.rpc-address.nameservices01.mynamenode2" = "xxxx:8020",\n  "spark.hadoop.dfs.client.failover.proxy.provider" = "org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider",\n  "working_dir" = "hdfs://nameservices01/doris_prd_data/sinan/spark_load/",\n  "broker" = "broker_name",\n  "broker.username" = "username",\n  "broker.password" = "",\n  "broker.dfs.nameservices" = "nameservices01",\n  "broker.dfs.ha.namenodes.HDFS4001273" = "mynamenode1, mynamenode2",\n  "broker.dfs.namenode.rpc-address.nameservices01.mynamenode1" = "xxxx:8020",\n  "broker.dfs.namenode.rpc-address.nameservices01.mynamenode2" = "xxxx:8020",\n  "broker.dfs.client.failover.proxy.provider.nameservices01" = "org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider"\n);\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Spark Load supports Kerberos authentication"})}),"\n",(0,a.jsx)(n.p,{children:"If Spark load accesses Hadoop cluster resources with Kerberos authentication, we only need to specify the following parameters when creating Spark resources:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"broker.hadoop.security.authentication"}),": Specify the authentication method as kerberos."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"broker.kerberos_principal"}),": Specify the principal of kerberos."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"broker.kerberos_keytab"}),": Specify the path to the keytab file for kerberos. The file must be an absolute path to a file on the server where the broker process is located. And can be accessed by the Broker process."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"broker.kerberos_keytab_content"}),": Specify the content of the keytab file in kerberos after base64 encoding. You can choose one of these with ",(0,a.jsx)(n.code,{children:"kerberos_keytab"})," configuration."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Example\uFF1A"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'CREATE EXTERNAL RESOURCE "spark_on_kerberos"\nPROPERTIES\n(\n  "type" = "spark",\n  "spark.master" = "yarn",\n  "spark.submit.deployMode" = "cluster",\n  "spark.jars" = "xxx.jar,yyy.jar",\n  "spark.files" = "/tmp/aaa,/tmp/bbb",\n  "spark.executor.memory" = "1g",\n  "spark.yarn.queue" = "queue0",\n  "spark.hadoop.yarn.resourcemanager.address" = "127.0.0.1:9999",\n  "spark.hadoop.fs.defaultFS" = "hdfs://127.0.0.1:10000",\n  "working_dir" = "hdfs://127.0.0.1:10000/tmp/doris",\n  "broker" = "broker0",\n  "broker.hadoop.security.authentication" = "kerberos",\n  "broker.kerberos_principal" = "doris@YOUR.COM",\n  "broker.kerberos_keytab" = "/home/doris/my.keytab"\n);\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Show resources"})}),"\n",(0,a.jsxs)(n.p,{children:["Ordinary accounts can only see the resources that they have ",(0,a.jsx)(n.code,{children:"USAGE_PRIV"})," to use."]}),"\n",(0,a.jsx)(n.p,{children:"The root and admin accounts can see all the resources."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Resource privilege"})}),"\n",(0,a.jsxs)(n.p,{children:["Resource permissions are managed by grant revoke. Currently, only ",(0,a.jsx)(n.code,{children:"USAGE_PRIV"})," permission is supported."]}),"\n",(0,a.jsxs)(n.p,{children:["You can use the ",(0,a.jsx)(n.code,{children:"USAGE_PRIV"})," permission is given to a user or a role, and the role is used the same as before."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'-- Grant permission to the spark0 resource to user user0\n\nGRANT USAGE_PRIV ON RESOURCE "spark0" TO "user0"@"%";\n\n-- Grant permission to the spark0 resource to role ROLE0\n\nGRANT USAGE_PRIV ON RESOURCE "spark0" TO ROLE "role0";\n\n-- Grant permission to all resources to user user0\n\nGRANT USAGE_PRIV ON RESOURCE * TO "user0"@"%";\n\n-- Grant permission to all resources to role ROLE0\n\nGRANT USAGE_PRIV ON RESOURCE * TO ROLE "role0";\n\n-- Revoke the spark0 resource permission of user user0\n\nREVOKE USAGE_PRIV ON RESOURCE "spark0" FROM "user0"@"%";\n\n'})}),"\n",(0,a.jsx)(n.h3,{id:"configure-spark-client",children:"Configure spark client"}),"\n",(0,a.jsxs)(n.p,{children:["The Fe submits the spark task by executing the spark submit command. Therefore, it is necessary to configure the spark client for Fe. It is recommended to use the official version of spark 2 above 2.4.3, ",(0,a.jsx)(n.a,{href:"https://archive.apache.org/dist/spark/",children:"download spark here"}),". After downloading, please follow the steps to complete the following configuration."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Configure SPARK_HOME environment variable"})}),"\n",(0,a.jsxs)(n.p,{children:["Place the spark client on the same machine as Fe and configure ",(0,a.jsx)(n.code,{children:"spark_home_default_dir"})," in the ",(0,a.jsx)(n.code,{children:"fe.conf"}),". This configuration item defaults to the ",(0,a.jsx)(n.code,{children:"fe/lib/spark2x"})," path. This config cannot be empty."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Configure spark dependencies"})}),"\n",(0,a.jsxs)(n.p,{children:["Package all jar packages in jars folder under spark client root path into a zip file, and configure ",(0,a.jsx)(n.code,{children:"spark_resource_patj"})," in ",(0,a.jsx)(n.code,{children:"fe.conf"})," as this zip file's path."]}),"\n",(0,a.jsxs)(n.p,{children:["When the spark load task is submitted, this zip file will be uploaded to the remote repository, and the default repository path will be hung in ",(0,a.jsx)(n.code,{children:"working_dir/{cluster_ID}"})," directory named as ",(0,a.jsx)(n.code,{children:"__spark_repository__{resource_name}"}),", which indicates that a resource in the cluster corresponds to a remote warehouse. The directory structure of the remote warehouse is as follows:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"__spark_repository__spark0/\n    |-__archive_1.0.0/\n    |        |-__lib_990325d2c0d1d5e45bf675e54e44fb16_spark-dpp-1.0.0-jar-with-dependencies.jar\n    |        |-__lib_7670c29daf535efe3c9b923f778f61fc_spark-2x.zip\n    |-__archive_1.1.0/\n    |        |-__lib_64d5696f99c379af2bee28c1c84271d5_spark-dpp-1.1.0-jar-with-dependencies.jar\n    |        |-__lib_1bbb74bb6b264a270bc7fca3e964160f_spark-2x.zip\n    |-__archive_1.2.0/\n    |        |-...\n"})}),"\n",(0,a.jsxs)(n.p,{children:["In addition to spark dependency (named by ",(0,a.jsx)(n.code,{children:"spark-2x.zip"})," by default), Fe will also upload DPP's dependency package to the remote repository. If all the dependency files submitted by spark load already exist in the remote repository, then there is no need to upload dependency, saving the time of repeatedly uploading a large number of files each time."]}),"\n",(0,a.jsx)(n.h3,{id:"configure-yarn-client",children:"Configure yarn client"}),"\n",(0,a.jsxs)(n.p,{children:["The Fe obtains the running application status and kills the application by executing the yarn command. Therefore, you need to configure the yarn client for Fe. It is recommended to use the official version of Hadoop above 2.5.2, ",(0,a.jsx)(n.a,{href:"https://archive.apache.org/dist/hadoop/common/",children:"download hadoop"}),". After downloading, please follow the steps to complete the following configuration."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Configure the yarn client path"})}),"\n",(0,a.jsxs)(n.p,{children:["Place the downloaded yarn client in the same machine as Fe, and configure ",(0,a.jsx)(n.code,{children:"yarn_client_path"})," in the ",(0,a.jsx)(n.code,{children:"fe.conf"})," as the executable file of yarn, which is set as the ",(0,a.jsx)(n.code,{children:"fe/lib/yarn-client/hadoop/bin/yarn"})," by default."]}),"\n",(0,a.jsxs)(n.p,{children:["(optional) when Fe obtains the application status or kills the application through the yarn client, the configuration files required for executing the yarn command will be generated by default in the ",(0,a.jsx)(n.code,{children:"lib/yarn-config"})," path in the Fe root directory. This path can be configured by configuring ",(0,a.jsx)(n.code,{children:"yarn-config-dir"})," in the ",(0,a.jsx)(n.code,{children:"fe.conf"}),". The currently generated configuration yarn config files include ",(0,a.jsx)(n.code,{children:"core-site.xml"})," and ",(0,a.jsx)(n.code,{children:"yarn-site.xml"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"create-load",children:"Create Load"}),"\n",(0,a.jsx)(n.p,{children:"Grammar:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"LOAD LABEL load_label\n    (data_desc, ...)\n    WITH RESOURCE resource_name resource_properties\n    [PROPERTIES (key1=value1, ... )]\n\n* load_label:\n	db_name.label_name\n\n* data_desc:\n    DATA INFILE ('file_path', ...)\n    [NEGATIVE]\n    INTO TABLE tbl_name\n    [PARTITION (p1, p2)]\n    [COLUMNS TERMINATED BY separator ]\n    [(col1, ...)]\n    [SET (k1=f1(xx), k2=f2(xx))]\n    [WHERE predicate]\n\n* resource_properties:\n    (key2=value2, ...)\n"})}),"\n",(0,a.jsx)(n.p,{children:"Example 1: when the upstream data source is HDFS file"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'LOAD LABEL db1.label1\n(\n    DATA INFILE("hdfs://abc.com:8888/user/palo/test/ml/file1")\n    INTO TABLE tbl1\n    COLUMNS TERMINATED BY ","\n    (tmp_c1,tmp_c2)\n    SET\n    (\n        id=tmp_c2,\n        name=tmp_c1\n    ),\n    DATA INFILE("hdfs://abc.com:8888/user/palo/test/ml/file2")\n    INTO TABLE tbl2\n    COLUMNS TERMINATED BY ","\n    (col1, col2)\n    where col1 > 1\n)\nWITH RESOURCE \'spark0\'\n(\n    "spark.executor.memory" = "2g",\n    "spark.shuffle.compress" = "true"\n)\nPROPERTIES\n(\n    "timeout" = "3600"\n);\n\n'})}),"\n",(0,a.jsx)(n.p,{children:"Example 2: when the upstream data source is hive table"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'step 1:\u65B0\u5EFAhive\u5916\u90E8\u8868\nCREATE EXTERNAL TABLE hive_t1\n(\n    k1 INT,\n    K2 SMALLINT,\n    k3 varchar(50),\n    uuid varchar(100)\n)\nENGINE=hive\nproperties\n(\n"database" = "tmp",\n"table" = "t1",\n"hive.metastore.uris" = "thrift://0.0.0.0:8080"\n);\n\nstep 2: \u63D0\u4EA4load\u547D\u4EE4\nLOAD LABEL db1.label1\n(\n    DATA FROM TABLE hive_t1\n    INTO TABLE tbl1\n    (k1,k2,k3)\n    SET\n    (\n		uuid=bitmap_dict(uuid)\n    )\n)\nWITH RESOURCE \'spark0\'\n(\n    "spark.executor.memory" = "2g",\n    "spark.shuffle.compress" = "true"\n)\nPROPERTIES\n(\n    "timeout" = "3600"\n);\n\n'})}),"\n",(0,a.jsx)(n.p,{children:"Example 3: when the upstream data source is hive binary type table"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'step 1: create hive external table\nCREATE EXTERNAL TABLE hive_t1\n(\n    k1 INT,\n    K2 SMALLINT,\n    k3 varchar(50),\n    uuid varchar(100)\n)\nENGINE=hive\nproperties\n(\n"database" = "tmp",\n"table" = "t1",\n"hive.metastore.uris" = "thrift://0.0.0.0:8080"\n);\n\nstep 2: submit load command\nLOAD LABEL db1.label1\n(\n    DATA FROM TABLE hive_t1\n    INTO TABLE tbl1\n    (k1,k2,k3)\n    SET\n    (\n		uuid=binary_bitmap(uuid)\n    )\n)\nWITH RESOURCE \'spark0\'\n(\n    "spark.executor.memory" = "2g",\n    "spark.shuffle.compress" = "true"\n)\nPROPERTIES\n(\n    "timeout" = "3600"\n);\n\n'})}),"\n",(0,a.jsx)(n.p,{children:"Example 4: Import data from hive partitioned table"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'-- hive create table statement\ncreate table test_partition(\nid int,\nname string,\nage int\n)\npartitioned by (dt string)\nrow format delimited fields terminated by \',\'\nstored as textfile;\n\n-- doris create table statement\nCREATE TABLE IF NOT EXISTS test_partition_04\n(\ndt date,\nid int,\nname string,\nage int\n)\nUNIQUE KEY(`dt`, `id`)\nDISTRIBUTED BY HASH(`id`) BUCKETS 1\nPROPERTIES (\n"replication_allocation" = "tag.location.default: 1"\n);\n-- spark load \nCREATE EXTERNAL RESOURCE "spark_resource"\nPROPERTIES\n(\n"type" = "spark",\n"spark.master" = "yarn",\n"spark.submit.deployMode" = "cluster",\n"spark.executor.memory" = "1g",\n"spark.yarn.queue" = "default",\n"spark.hadoop.yarn.resourcemanager.address" = "localhost:50056",\n"spark.hadoop.fs.defaultFS" = "hdfs://localhost:9000",\n"working_dir" = "hdfs://localhost:9000/tmp/doris",\n"broker" = "broker_01"\n);\nLOAD LABEL demo.test_hive_partition_table_18\n(\n    DATA INFILE("hdfs://localhost:9000/user/hive/warehouse/demo.db/test/dt=2022-08-01/*")\n    INTO TABLE test_partition_04\n    COLUMNS TERMINATED BY ","\n    FORMAT AS "csv"\n    (id,name,age)\n    COLUMNS FROM PATH AS (`dt`)\n    SET\n    (\n        dt=dt,\n        id=id,\n        name=name,\n        age=age\n    )\n)\nWITH RESOURCE \'spark_resource\'\n(\n    "spark.executor.memory" = "1g",\n    "spark.shuffle.compress" = "true"\n)\nPROPERTIES\n(\n    "timeout" = "3600"\n);\n'})}),"\n",(0,a.jsxs)(n.p,{children:["You can view the details syntax about creating load by input ",(0,a.jsx)(n.code,{children:"help spark load"}),". This paper mainly introduces the parameter meaning and precautions in the creation and load syntax of spark load."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Label"})}),"\n",(0,a.jsxs)(n.p,{children:["Identification of the import task. Each import task has a unique label within a single database. The specific rules are consistent with ",(0,a.jsx)(n.code,{children:"broker load"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Data description parameters"})}),"\n",(0,a.jsxs)(n.p,{children:["Currently, the supported data sources are CSV and hive table. Other rules are consistent with ",(0,a.jsx)(n.code,{children:"broker load"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Load job parameters"})}),"\n",(0,a.jsxs)(n.p,{children:["Load job parameters mainly refer to the ",(0,a.jsx)(n.code,{children:"opt_properties"})," in the spark load. Load job parameters are applied to the entire load job. The rules are consistent with ",(0,a.jsx)(n.code,{children:"broker load"}),"."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Spark resource parameters"})}),"\n",(0,a.jsxs)(n.p,{children:["Spark resources need to be configured into the Doris system in advance, and users should be given ",(0,a.jsx)(n.code,{children:"USAGE_PRIV"}),". Spark load can only be used after priv permission."]}),"\n",(0,a.jsx)(n.p,{children:"When users have temporary requirements, such as adding resources for tasks and modifying spark configs, you can set them here. The settings only take effect for this task and do not affect the existing configuration in the Doris cluster."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:'WITH RESOURCE \'spark0\'\n(\n  "spark.driver.memory" = "1g",\n  "spark.executor.memory" = "3g"\n)\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Load when data source is hive table"})}),"\n",(0,a.jsx)(n.p,{children:"At present, if you want to use hive table as a data source in the import process, you need to create an external table of type hive,"}),"\n",(0,a.jsx)(n.p,{children:"Then you can specify the table name of the external table when submitting the Load command."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Load process to build global dictionary"})}),"\n",(0,a.jsx)(n.p,{children:"The data type applicable to the aggregate columns of the Doris table is of type bitmap."}),"\n",(0,a.jsxs)(n.p,{children:["In the load command, you can specify the field to build a global dictionary. The format is: '",(0,a.jsx)(n.code,{children:"doris field name=bitmap_dict(hive_table field name)"})]}),"\n",(0,a.jsx)(n.p,{children:"It should be noted that the construction of global dictionary is supported only when the upstream data source is hive table."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Load when data source is hive binary type table"})}),"\n",(0,a.jsx)(n.p,{children:"The data type applicable to the aggregate column of the doris table is bitmap type, and the data type of the corresponding column in the hive table of the data source is binary (through the org.apache.doris.load.loadv2.dpp.BitmapValue (FE spark-dpp) class serialized) type."}),"\n",(0,a.jsxs)(n.p,{children:["There is no need to build a global dictionary, just specify the corresponding field in the load command, the format is: ",(0,a.jsx)(n.code,{children:"doris field name=binary_bitmap (hive table field name)"})]}),"\n",(0,a.jsxs)(n.p,{children:["Similarly, the binary (bitmap) type of data import is currently only supported when the upstream data source is a hive table,You can refer to the use of hive bitmap ",(0,a.jsx)(n.a,{href:"/docs/1.2/ecosystem/hive-bitmap-udf",children:"hive-bitmap-udf"})]}),"\n",(0,a.jsx)(n.h3,{id:"show-load",children:"Show Load"}),"\n",(0,a.jsxs)(n.p,{children:["Spark load is asynchronous just like broker load, so the user must create the load label record and use label in the ",(0,a.jsx)(n.strong,{children:"show load command to view the load result"}),". The show load command is common in all load types. The specific syntax can be viewed by executing help show load."]}),"\n",(0,a.jsx)(n.p,{children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-mysql",children:'mysql> show load order by createtime desc limit 1\\G\n*************************** 1. row ***************************\n         JobId: 76391\n         Label: label1\n         State: FINISHED\n      Progress: ETL:100%; LOAD:100%\n          Type: SPARK\n       EtlInfo: unselected.rows=4; dpp.abnorm.ALL=15; dpp.norm.ALL=28133376\n      TaskInfo: cluster:cluster0; timeout(s):10800; max_filter_ratio:5.0E-5\n      ErrorMsg: N/A\n    CreateTime: 2019-07-27 11:46:42\n  EtlStartTime: 2019-07-27 11:46:44\n EtlFinishTime: 2019-07-27 11:49:44\n LoadStartTime: 2019-07-27 11:49:44\nLoadFinishTime: 2019-07-27 11:50:16\n           URL: http://1.1.1.1:8089/proxy/application_1586619723848_0035/\n    JobDetails: {"ScannedRows":28133395,"TaskNumber":1,"FileNumber":1,"FileSize":200000}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Refer to broker load for the meaning of parameters in the returned result set. The differences are as follows:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"State"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The current phase of the load job. After the job is submitted, the status is pending. After the spark ETL is submitted, the status changes to ETL. After ETL is completed, Fe schedules be to execute push operation, and the status changes to finished after the push is completed and the version takes effect."}),"\n",(0,a.jsx)(n.p,{children:"There are two final stages of the load job: cancelled and finished. When the load job is in these two stages, the load is completed. Among them, cancelled is load failure, finished is load success."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Progress"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Progress description of the load job. There are two kinds of progress: ETL and load, corresponding to the two stages of the load process, ETL and loading."}),"\n",(0,a.jsx)(n.p,{children:"The progress range of load is 0 ~ 100%."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"Load progress = the number of tables that have completed all replica imports / the total number of tables in this import task * 100%"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"If all load tables are loaded, the progress of load is 99%"}),", the load enters the final effective stage. After the whole load is completed, the load progress will be changed to 100%."]}),"\n",(0,a.jsx)(n.p,{children:"The load progress is not linear. Therefore, if the progress does not change over a period of time, it does not mean that the load is not in execution."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Type"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Type of load job. Spark load is spark."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"CreateTime/EtlStartTime/EtlFinishTime/LoadStartTime/LoadFinishTime"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"These values represent the creation time of the load, the start time of the ETL phase, the completion time of the ETL phase, the start time of the loading phase, and the completion time of the entire load job."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"JobDetails"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Display the detailed running status of some jobs, which will be updated when ETL ends. It includes the number of loaded files, the total size (bytes), the number of subtasks, the number of processed original lines, etc."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:'{"ScannedRows":139264,"TaskNumber":1,"FileNumber":1,"FileSize":940754064}'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"URL"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Copy this url to the browser and jump to the web interface of the corresponding application."}),"\n",(0,a.jsx)(n.h3,{id:"view-spark-launcher-commit-log",children:"View spark launcher commit log"}),"\n",(0,a.jsxs)(n.p,{children:["Sometimes users need to view the detailed logs generated during the spark submission process. The logs are saved in the ",(0,a.jsx)(n.code,{children:"log/spark_launcher_log"})," under the Fe root directory named as ",(0,a.jsx)(n.code,{children:"spark_launcher_{load_job_id}_{label}.log"}),". The log will be saved in this directory for a period of time. When the load information in Fe metadata is cleaned up, the corresponding log will also be cleaned. The default saving log time is 3 days."]}),"\n",(0,a.jsx)(n.h3,{id:"cancel-load",children:"cancel load"}),"\n",(0,a.jsxs)(n.p,{children:["When the spark load job status is not cancelled or finished, it can be manually cancelled by the user. When canceling, you need to specify the label to cancel the load job. The syntax of the cancel load command can be viewed by executing ",(0,a.jsx)(n.code,{children:"help cancel load"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"related-system-configuration",children:"Related system configuration"}),"\n",(0,a.jsx)(n.h3,{id:"fe-configuration",children:"FE configuration"}),"\n",(0,a.jsxs)(n.p,{children:["The following configuration belongs to the system level configuration of spark load, that is, the configuration for all spark load import tasks. Mainly through modification",(0,a.jsx)(n.code,{children:"fe.conf"})," to modify the configuration value."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"enable_spark_load"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Open spark load and create resource. The default value is false. This feature is turned off."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"spark_load_default_timeout_second"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The default timeout for tasks is 259200 seconds (3 days)."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"spark_home_default_dir"})}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Spark client path (",(0,a.jsx)(n.code,{children:"Fe/lib/spark2x"}),")."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"spark_resource_path"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The path of the packaged spark dependent file (empty by default)."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"spark_launcher_log_dir"})}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The directory where the spark client's commit log is stored (",(0,a.jsx)(n.code,{children:"Fe/log/spark)_launcher_log"}),"\uFF09."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"yarn_client_path"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The path of the yarn binary executable file (`Fe/lib/yarn-client/Hadoop/bin/yarn')."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"yarn_config_dir"})}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The path to generate the yarn configuration file (",(0,a.jsx)(n.code,{children:"Fe/lib/yarn-config"}),")."]}),"\n",(0,a.jsx)(n.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,a.jsx)(n.h3,{id:"application-scenarios",children:"Application scenarios"}),"\n",(0,a.jsx)(n.p,{children:"The most suitable scenario to use spark load is that the raw data is in the file system (HDFS), and the amount of data is tens of GB to TB. Stream load or broker load is recommended for small amount of data."}),"\n",(0,a.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Spark load does not yet support the import of Doris table fields that are of type String. If your table fields are of type String, please change them to type varchar, otherwise the import will fail, prompting ",(0,a.jsx)(n.code,{children:"type:ETL_QUALITY_UNSATISFIED; msg:quality not good enough to cancel"})]}),"\n",(0,a.jsxs)(n.li,{children:["When using spark load, the ",(0,a.jsx)(n.code,{children:"HADOOP_CONF_DIR"})," environment variable is no set in the ",(0,a.jsx)(n.code,{children:"spark-env.sh"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["If the ",(0,a.jsx)(n.code,{children:"HADOOP_CONF_DIR"})," environment variable is not set, the error ",(0,a.jsx)(n.code,{children:"When running with master 'yarn' either HADOOP_CONF_DIR or YARN_CONF_DIR must be set in the environment"})," will be reported."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["When using spark load, the ",(0,a.jsx)(n.code,{children:"spark_home_default_dir"})," does not specify correctly."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["The spark submit command is used when submitting a spark job. If ",(0,a.jsx)(n.code,{children:"spark_home_default_dir"})," is set incorrectly, an error ",(0,a.jsx)(n.code,{children:"Cannot run program 'xxx/bin/spark_submit', error = 2, no such file or directory"})," will be reported."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["When using spark load, ",(0,a.jsx)(n.code,{children:"spark_resource_path"})," does not point to the packaged zip file."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["If ",(0,a.jsx)(n.code,{children:"spark_resource_path"})," is not set correctly. An error ",(0,a.jsx)(n.code,{children:"file XXX/jars/spark-2x.zip"})," does not exist will be reported."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["When using spark load ",(0,a.jsx)(n.code,{children:"yarn_client_path"})," does not point to a executable file of yarn."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["If ",(0,a.jsx)(n.code,{children:"yarn_client_path"})," is not set correctly. An error ",(0,a.jsx)(n.code,{children:"yarn client does not exist in path: XXX/yarn-client/hadoop/bin/yarn"})," will be reported."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["When using spark load, the ",(0,a.jsx)(n.code,{children:"JAVA_HOME"})," environment variable is no set in the ",(0,a.jsx)(n.code,{children:"hadoop-config.sh"})," on the yarn clinet."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["If the ",(0,a.jsx)(n.code,{children:"JAVA_HOME"}),"  environment variable is not set, the error ",(0,a.jsx)(n.code,{children:"yarn application kill failed. app id: xxx, load job id: xxx, msg: which: no xxx/lib/yarn-client/hadoop/bin/yarn in ((null))  Error: JAVA_HOME is not set and could not be found"})," will be reported."]}),"\n",(0,a.jsx)(n.h2,{id:"more-help",children:"More Help"}),"\n",(0,a.jsxs)(n.p,{children:["For more detailed syntax used by ",(0,a.jsx)(n.strong,{children:"Spark Load"}),",  you can enter ",(0,a.jsx)(n.code,{children:"HELP SPARK LOAD"})," on the Mysql client command line for more help."]})]})}function h(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},250065:function(e,n,r){r.d(n,{Z:function(){return t},a:function(){return o}});var s=r(667294);let a={},i=s.createContext(a);function o(e){let n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);