"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["430968"],{848526:function(n,e,t){t.r(e),t.d(e,{metadata:()=>s,contentTitle:()=>a,default:()=>d,assets:()=>r,toc:()=>c,frontMatter:()=>o});var s=JSON.parse('{"id":"sql-manual/sql-functions/spatial-functions/st-angle","title":"ST_ANGLE","description":"\x3c!--","source":"@site/versioned_docs/version-3.0/sql-manual/sql-functions/spatial-functions/st-angle.md","sourceDirName":"sql-manual/sql-functions/spatial-functions","slug":"/sql-manual/sql-functions/spatial-functions/st-angle","permalink":"/docs/3.0/sql-manual/sql-functions/spatial-functions/st-angle","draft":false,"unlisted":false,"tags":[],"version":"3.0","frontMatter":{"title":"ST_ANGLE","language":"en"},"sidebar":"docs","previous":{"title":"ST_DISTANCE_SPHERE","permalink":"/docs/3.0/sql-manual/sql-functions/spatial-functions/st-distance-sphere"},"next":{"title":"ST_AZIMUTH","permalink":"/docs/3.0/sql-manual/sql-functions/spatial-functions/st-azimuth"}}'),i=t("785893"),l=t("250065");let o={title:"ST_ANGLE",language:"en"},a=void 0,r={},c=[{value:"ST_Angle",id:"st_angle",level:2},{value:"Syntax",id:"syntax",level:3},{value:"description",id:"description",level:3},{value:"example",id:"example",level:3},{value:"keywords",id:"keywords",level:3}];function p(n){let e={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"st_angle",children:"ST_Angle"}),"\n",(0,i.jsx)(e.h3,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.code,{children:"DOUBLE ST_Angle(GEOPOINT point1, GEOPOINT point2, GEOPOINT point3)"})}),"\n",(0,i.jsx)(e.h3,{id:"description",children:"description"}),"\n",(0,i.jsx)(e.p,{children:"Enter three point, which represent two intersecting lines. Returns the angle between these lines. Point 2 and point 1 represent the first line and point 2 and point 3 represent the second line. The angle between these lines is in radians, in the range [0, 2pi). The angle is measured clockwise from the first line to the second line."}),"\n",(0,i.jsx)(e.p,{children:"ST_ANGLE has the following edge cases:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"If points 2 and 3 are the same, returns NULL."}),"\n",(0,i.jsx)(e.li,{children:"If points 2 and 1 are the same, returns NULL."}),"\n",(0,i.jsx)(e.li,{children:"If points 2 and 3 are exactly antipodal, returns NULL."}),"\n",(0,i.jsx)(e.li,{children:"If points 2 and 1 are exactly antipodal, returns NULL."}),"\n",(0,i.jsx)(e.li,{children:"If any of the input geographies are not single points or are the empty geography, then throws an error."}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"example",children:"example"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"mysql> SELECT ST_Angle(ST_Point(1, 0),ST_Point(0, 0),ST_Point(0, 1));\n+----------------------------------------------------------------------+\n| st_angle(st_point(1.0, 0.0), st_point(0.0, 0.0), st_point(0.0, 1.0)) |\n+----------------------------------------------------------------------+\n|                                                     4.71238898038469 |\n+----------------------------------------------------------------------+\n1 row in set (0.04 sec)\n\nmysql> SELECT ST_Angle(ST_Point(0, 0),ST_Point(1, 0),ST_Point(0, 1));\n+----------------------------------------------------------------------+\n| st_angle(st_point(0.0, 0.0), st_point(1.0, 0.0), st_point(0.0, 1.0)) |\n+----------------------------------------------------------------------+\n|                                                  0.78547432161873854 |\n+----------------------------------------------------------------------+\n1 row in set (0.02 sec)\n\nmysql> SELECT ST_Angle(ST_Point(1, 0),ST_Point(0, 0),ST_Point(1, 0));\n+----------------------------------------------------------------------+\n| st_angle(st_point(1.0, 0.0), st_point(0.0, 0.0), st_point(1.0, 0.0)) |\n+----------------------------------------------------------------------+\n|                                                                    0 |\n+----------------------------------------------------------------------+\n1 row in set (0.02 sec)\n\nmysql> SELECT ST_Angle(ST_Point(1, 0),ST_Point(0, 0),ST_Point(0, 0));\n+----------------------------------------------------------------------+\n| st_angle(st_point(1.0, 0.0), st_point(0.0, 0.0), st_point(0.0, 0.0)) |\n+----------------------------------------------------------------------+\n|                                                                 NULL |\n+----------------------------------------------------------------------+\n1 row in set (0.03 sec)\n\nmysql> SELECT ST_Angle(ST_Point(0, 0),ST_Point(-30, 0),ST_Point(150, 0));\n+--------------------------------------------------------------------------+\n| st_angle(st_point(0.0, 0.0), st_point(-30.0, 0.0), st_point(150.0, 0.0)) |\n+--------------------------------------------------------------------------+\n|                                                                     NULL |\n+--------------------------------------------------------------------------+\n1 row in set (0.02 sec)\n"})}),"\n",(0,i.jsx)(e.h3,{id:"keywords",children:"keywords"}),"\n",(0,i.jsx)(e.p,{children:"ST_ANGLE,ST,ANGLE"})]})}function d(n={}){let{wrapper:e}={...(0,l.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(p,{...n})}):p(n)}},250065:function(n,e,t){t.d(e,{Z:function(){return a},a:function(){return o}});var s=t(667294);let i={},l=s.createContext(i);function o(n){let e=s.useContext(l);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);