"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["716865"],{729621:function(e,n,s){s.r(n),s.d(n,{metadata:()=>r,contentTitle:()=>l,default:()=>u,assets:()=>a,toc:()=>c,frontMatter:()=>t});var r=JSON.parse('{"id":"admin-manual/resource-admin/use-workload-local-io-limit","title":"Use Workload Group limit local IO","description":"\x3c!--","source":"@site/docs/admin-manual/resource-admin/use-workload-local-io-limit.md","sourceDirName":"admin-manual/resource-admin","slug":"/admin-manual/resource-admin/use-workload-local-io-limit","permalink":"/docs/dev/admin-manual/resource-admin/use-workload-local-io-limit","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Use Workload Group limit local IO","language":"en"},"sidebar":"docs","previous":{"title":"Use Workload Group limit CPU","permalink":"/docs/dev/admin-manual/resource-admin/use-workload-cpu-limit"},"next":{"title":"Use Workload Group limit remote IO","permalink":"/docs/dev/admin-manual/resource-admin/use-workload-remote-io-limit"}}'),i=s("785893"),o=s("250065");let t={title:"Use Workload Group limit local IO",language:"en"},l=void 0,a={},c=[{value:"Test limit local IO",id:"test-limit-local-io",level:2},{value:"Test",id:"test",level:3},{value:"Not limit IO",id:"not-limit-io",level:3},{value:"Test IO limit.",id:"test-io-limit",level:3},{value:"NOTE",id:"note",level:2}];function d(e){let n={code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"In OLAP systems, when performing ETL or large ad-hoc queries, a significant amount of data needs to be read. To speed up data analysis, Doris internally uses multithreading to scan multiple disk files in parallel, which generates a large amount of disk I/O and can negatively impact other queries, such as report analysis."}),"\n",(0,i.jsx)(n.p,{children:"By using Workload Groups, you can group offline ETL data processing and online report queries separately and limit the I/O bandwidth for offline data processing, thereby reducing its impact on online report analysis."}),"\n",(0,i.jsx)(n.h2,{id:"test-limit-local-io",children:"Test limit local IO"}),"\n",(0,i.jsx)(n.h3,{id:"test",children:"Test"}),"\n",(0,i.jsx)(n.p,{children:"1FE,1BE(96 cores), test data is clickbench"}),"\n",(0,i.jsx)(n.h3,{id:"not-limit-io",children:"Not limit IO"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Clear cache."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// clear OS cache.\nsync; echo 3 > /proc/sys/vm/drop_caches\n\n// disable BE's cache.\ndisable_storage_page_cache = true\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Run query one by one."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"set dry_run_query = true;\nselect * from hits.hits;\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Show local IO by system table, is's 3G/s."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"mysql [information_schema]>select LOCAL_SCAN_BYTES_PER_SECOND / 1024 / 1024 as mb_per_sec from workload_group_resource_usage where WORKLOAD_GROUP_ID=11201;\n+--------------------+\n| mb_per_sec         |\n+--------------------+\n| 1146.6208400726318 |\n+--------------------+\n1 row in set (0.03 sec)\n\nmysql [information_schema]>select LOCAL_SCAN_BYTES_PER_SECOND / 1024 / 1024 as mb_per_sec from workload_group_resource_usage where WORKLOAD_GROUP_ID=11201;\n+--------------------+\n| mb_per_sec         |\n+--------------------+\n| 3496.2762966156006 |\n+--------------------+\n1 row in set (0.04 sec)\n\nmysql [information_schema]>select LOCAL_SCAN_BYTES_PER_SECOND / 1024 / 1024 as mb_per_sec from workload_group_resource_usage where WORKLOAD_GROUP_ID=11201;\n+--------------------+\n| mb_per_sec         |\n+--------------------+\n| 2192.7690029144287 |\n+--------------------+\n1 row in set (0.02 sec)\n"})}),"\n",(0,i.jsx)(n.p,{children:"4.Show IO by pidstat, the first column in picture is process id, the second column is IO(kb/s), it's 2G/s."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"use workload group io",src:s(715719).Z+"",width:"814",height:"1080"})}),"\n",(0,i.jsx)(n.h3,{id:"test-io-limit",children:"Test IO limit."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Clear cache."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"// clear os cache\nsync; echo 3 > /proc/sys/vm/drop_caches\n\n// disable BE cache\ndisable_storage_page_cache = true\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Alter workload group."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"alter workload group g2 properties('read_bytes_per_second'='104857600');\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Show IO by system table, it's about 98M/s."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"mysql [information_schema]>select LOCAL_SCAN_BYTES_PER_SECOND / 1024 / 1024 as mb_per_sec from workload_group_resource_usage where WORKLOAD_GROUP_ID=11201;\n+--------------------+\n| mb_per_sec         |\n+--------------------+\n| 97.94296646118164  |\n+--------------------+\n1 row in set (0.03 sec)\n\nmysql [information_schema]>select LOCAL_SCAN_BYTES_PER_SECOND / 1024 / 1024 as mb_per_sec from workload_group_resource_usage where WORKLOAD_GROUP_ID=11201;\n+--------------------+\n| mb_per_sec         |\n+--------------------+\n| 98.37584781646729  |\n+--------------------+\n1 row in set (0.04 sec)\n\nmysql [information_schema]>select LOCAL_SCAN_BYTES_PER_SECOND / 1024 / 1024 as mb_per_sec from workload_group_resource_usage where WORKLOAD_GROUP_ID=11201;\n+--------------------+\n| mb_per_sec         |\n+--------------------+\n| 98.06641292572021  |\n+--------------------+\n1 row in set (0.02 sec)\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:"Show IO by pidstat, the process IO is about 131M/s\u3002"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"use workload group io",src:s(579239).Z+"",width:"808",height:"676"})}),"\n",(0,i.jsx)(n.h2,{id:"note",children:"NOTE"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"The LOCAL_SCAN_BYTES_PER_SECOND field in the system table represents the aggregated statistics at the process level for the current Workload Group. For example, if 12 file paths are configured, LOCAL_SCAN_BYTES_PER_SECOND represents the maximum I/O value across these 12 file paths. If you want to see the I/O throughput for each file path individually, you can view detailed values in Grafana or through the BE's bvar monitoring."}),"\n",(0,i.jsx)(n.li,{children:"Due to the presence of the operating system's and Doris's Page Cache, the I/O values observed using Linux's I/O monitoring scripts are usually smaller than those seen in the system table."}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},715719:function(e,n,s){s.d(n,{Z:function(){return r}});let r=s.p+"assets/images/use_wg_io_1-15b5d3e97f7ccf7f914eef0e6bf55cd4.png"},579239:function(e,n,s){s.d(n,{Z:function(){return r}});let r=s.p+"assets/images/use_wg_io_2-2202fea206c596a3879c6660ada71037.png"},250065:function(e,n,s){s.d(n,{Z:function(){return l},a:function(){return t}});var r=s(667294);let i={},o=r.createContext(i);function t(e){let n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);