"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["213012"],{109804:function(e,n,s){s.r(n),s.d(n,{metadata:()=>i,contentTitle:()=>a,default:()=>u,assets:()=>o,toc:()=>d,frontMatter:()=>l});var i=JSON.parse('{"id":"sql-manual/sql-functions/ip-functions/is-ipv4-mapped","title":"IS_IPV4_MAPPED","description":"\x3c!--","source":"@site/versioned_docs/version-2.1/sql-manual/sql-functions/ip-functions/is-ipv4-mapped.md","sourceDirName":"sql-manual/sql-functions/ip-functions","slug":"/sql-manual/sql-functions/ip-functions/is-ipv4-mapped","permalink":"/docs/sql-manual/sql-functions/ip-functions/is-ipv4-mapped","draft":false,"unlisted":false,"tags":[],"version":"2.1","frontMatter":{"title":"IS_IPV4_MAPPED","language":"en"},"sidebar":"docs","previous":{"title":"IS_IPV4_COMPAT","permalink":"/docs/sql-manual/sql-functions/ip-functions/is-ipv4-compat"},"next":{"title":"IPV4_CIDR_TO_RANGE","permalink":"/docs/sql-manual/sql-functions/ip-functions/ipv4-cidr-to-range"}}'),t=s("785893"),r=s("250065");let l={title:"IS_IPV4_MAPPED",language:"en"},a=void 0,o={},d=[{value:"IS_IPV4_MAPPED",id:"is_ipv4_mapped",level:2},{value:"Description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"Notice",id:"notice",level:4},{value:"Example",id:"example",level:3},{value:"Keywords",id:"keywords",level:3}];function c(e){let n={code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"is_ipv4_mapped",children:"IS_IPV4_MAPPED"}),"\n",(0,t.jsx)(n.p,{children:"IS_IPV4_MAPPED"}),"\n",(0,t.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.h4,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"VARCHAR IS_IPV4_MAPPED(INET6_ATON(VARCHAR ipv4_addr))"})}),"\n",(0,t.jsx)(n.p,{children:"This function takes an IPv6 address represented in numeric form as a binary string, as returned by INET6_ATON().\nIt returns 1 if the argument is a valid IPv4-mapped IPv6 address, 0 otherwise, unless expr is NULL, in which case the function returns NULL.\nIPv4-mapped addresses have the form ::ffff:ipv4_address."}),"\n",(0,t.jsx)(n.h4,{id:"notice",children:"Notice"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"When the source input doesn't have a prefix of '::ffff:', but if it's still a valid ipv4 address, this result will also be 1 for the reason that the INET6_ATON() automatically adds the prefix for it."})}),"\n",(0,t.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"mysql> SELECT IS_IPV4_MAPPED(INET6_ATON('::ffff:10.0.5.9')) AS is_result;\n+-----------+\n| is_result |\n+-----------+\n|         1 |\n+-----------+\n1 row in set (0.02 sec)\n\nmysql> SELECT IS_IPV4_MAPPED(INET6_ATON('::10.0.5.9')) AS is_result;\n+-----------+\n| is_result |\n+-----------+\n|         0 |\n+-----------+\n1 row in set (0.03 sec)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"keywords",children:"Keywords"}),"\n",(0,t.jsx)(n.p,{children:"IS_IPV4_MAPPED, IP"})]})}function u(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return a},a:function(){return l}});var i=s(667294);let t={},r=i.createContext(t);function l(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);