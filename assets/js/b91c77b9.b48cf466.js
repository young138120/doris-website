"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["582672"],{382289:function(n,e,i){i.r(e),i.d(e,{metadata:()=>t,contentTitle:()=>l,default:()=>d,assets:()=>u,toc:()=>r,frontMatter:()=>o});var t=JSON.parse('{"id":"sql-manual/sql-functions/bitmap-functions/bitmap_union","title":"bitmap_union","description":"\x3c!--","source":"@site/versioned_docs/version-1.2/sql-manual/sql-functions/bitmap-functions/bitmap_union.md","sourceDirName":"sql-manual/sql-functions/bitmap-functions","slug":"/sql-manual/sql-functions/bitmap-functions/bitmap_union","permalink":"/docs/1.2/sql-manual/sql-functions/bitmap-functions/bitmap_union","draft":false,"unlisted":false,"tags":[],"version":"1.2","frontMatter":{"title":"bitmap_union","language":"en"},"sidebar":"docs","previous":{"title":"bitmap_and","permalink":"/docs/1.2/sql-manual/sql-functions/bitmap-functions/bitmap_and"},"next":{"title":"bitmap_xor","permalink":"/docs/1.2/sql-manual/sql-functions/bitmap-functions/bitmap_xor"}}'),s=i("785893"),a=i("250065");let o={title:"bitmap_union",language:"en"},l=void 0,u={},r=[{value:"bitmap_union function",id:"bitmap_union-function",level:2},{value:"description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"example",id:"example",level:3},{value:"keywords",id:"keywords",level:3}];function c(n){let e={code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,a.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h2,{id:"bitmap_union-function",children:"bitmap_union function"}),"\n",(0,s.jsx)(e.h3,{id:"description",children:"description"}),"\n",(0,s.jsx)(e.p,{children:"Aggregate function, used to calculate the grouped bitmap union. Common usage scenarios such as: calculating PV, UV."}),"\n",(0,s.jsx)(e.h4,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.code,{children:"BITMAP BITMAP_UNION(BITMAP value)"})}),"\n",(0,s.jsx)(e.p,{children:"Enter a set of bitmap values, find the union of this set of bitmap values, and return."}),"\n",(0,s.jsx)(e.h3,{id:"example",children:"example"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"mysql> select page_id, bitmap_union(user_id) from table group by page_id;\n"})}),"\n",(0,s.jsx)(e.p,{children:"Combined with the bitmap_count function, the PV data of the web page can be obtained"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"mysql> select page_id, bitmap_count(bitmap_union(user_id)) from table group by page_id;\n"})}),"\n",(0,s.jsx)(e.p,{children:"When the user_id field is int, the above query semantics is equivalent to"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"mysql> select page_id, count(distinct user_id) from table group by page_id;\n"})}),"\n",(0,s.jsx)(e.h3,{id:"keywords",children:"keywords"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"BITMAP_UNION, BITMAP\n"})})]})}function d(n={}){let{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},250065:function(n,e,i){i.d(e,{Z:function(){return l},a:function(){return o}});var t=i(667294);let s={},a=t.createContext(s);function o(n){let e=t.useContext(a);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),t.createElement(a.Provider,{value:e},n.children)}}}]);