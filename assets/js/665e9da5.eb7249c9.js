"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["65155"],{601242:function(e,n,t){t.r(n),t.d(n,{metadata:()=>r,contentTitle:()=>i,default:()=>d,assets:()=>c,toc:()=>o,frontMatter:()=>l});var r=JSON.parse('{"id":"sql-manual/sql-functions/string-functions/regexp/regexp-extract-all","title":"REGEXP_EXTRACT_ALL","description":"\x3c!--","source":"@site/versioned_docs/version-3.0/sql-manual/sql-functions/string-functions/regexp/regexp-extract-all.md","sourceDirName":"sql-manual/sql-functions/string-functions/regexp","slug":"/sql-manual/sql-functions/string-functions/regexp/regexp-extract-all","permalink":"/docs/3.0/sql-manual/sql-functions/string-functions/regexp/regexp-extract-all","draft":false,"unlisted":false,"tags":[],"version":"3.0","frontMatter":{"title":"REGEXP_EXTRACT_ALL","language":"en"},"sidebar":"docs","previous":{"title":"REGEXP_EXTRACT","permalink":"/docs/3.0/sql-manual/sql-functions/string-functions/regexp/regexp-extract"},"next":{"title":"REGEXP_REPLACE","permalink":"/docs/3.0/sql-manual/sql-functions/string-functions/regexp/regexp-replace"}}'),a=t("785893"),s=t("250065");let l={title:"REGEXP_EXTRACT_ALL",language:"en"},i=void 0,c={},o=[{value:"regexp_extract_all",id:"regexp_extract_all",level:2},{value:"Description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"example",id:"example",level:3},{value:"keywords",id:"keywords",level:3}];function p(e){let n={code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"regexp_extract_all",children:"regexp_extract_all"}),"\n",(0,a.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,a.jsx)(n.h4,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"VARCHAR regexp_extract_all (VARCHAR str, VARCHAR pattern)"})}),"\n",(0,a.jsx)(n.p,{children:"Regularly matches a string str and extracts the first sub-pattern matching part of pattern. The pattern needs to exactly match a part of str in order to return an array of strings for the part of the pattern that needs to be matched. If there is no match or the pattern has no sub-pattern, the empty string is returned."}),"\n",(0,a.jsxs)(n.p,{children:["Character set matching requires the use of Unicode standard character classes. For example, to match Chinese, use ",(0,a.jsx)(n.code,{children:"\\p{Han}"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"example",children:"example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"mysql> SELECT regexp_extract_all('AbCdE', '([[:lower:]]+)C([[:lower:]]+)');\n+--------------------------------------------------------------+\n| regexp_extract_all('AbCdE', '([[:lower:]]+)C([[:lower:]]+)') |\n+--------------------------------------------------------------+\n| ['b']                                                        |\n+--------------------------------------------------------------+\n\nmysql> SELECT regexp_extract_all('AbCdEfCg', '([[:lower:]]+)C([[:lower:]]+)');\n+-----------------------------------------------------------------+\n| regexp_extract_all('AbCdEfCg', '([[:lower:]]+)C([[:lower:]]+)') |\n+-----------------------------------------------------------------+\n| ['b','f']                                                       |\n+-----------------------------------------------------------------+\n\nmysql> SELECT regexp_extract_all('abc=111, def=222, ghi=333','(\"[^\"]+\"|\\\\w+)=(\"[^\"]+\"|\\\\w+)');\n+--------------------------------------------------------------------------------+\n| regexp_extract_all('abc=111, def=222, ghi=333', '(\"[^\"]+\"|\\w+)=(\"[^\"]+\"|\\w+)') |\n+--------------------------------------------------------------------------------+\n| ['abc','def','ghi']                                                            |\n+--------------------------------------------------------------------------------+\n\nmysql> select regexp_extract_all('\u8FD9\u662F\u4E00\u6BB5\u4E2D\u6587This is a passage in English 1234567', '(\\\\p{Han}+)(.+)');\n+------------------------------------------------------------------------------------------------+\n| regexp_extract_all('\u8FD9\u662F\u4E00\u6BB5\u4E2D\u6587This is a passage in English 1234567', '(\\p{Han}+)(.+)')       |\n+------------------------------------------------------------------------------------------------+\n| ['\u8FD9\u662F\u4E00\u6BB5\u4E2D\u6587']                                                                               |\n+------------------------------------------------------------------------------------------------+\n"})}),"\n",(0,a.jsx)(n.h3,{id:"keywords",children:"keywords"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"REGEXP_EXTRACT_ALL,REGEXP,EXTRACT,ALL\n"})})]})}function d(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return i},a:function(){return l}});var r=t(667294);let a={},s=r.createContext(a);function l(e){let n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);