"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["729569"],{369627:function(e,n,s){s.r(n),s.d(n,{metadata:()=>t,contentTitle:()=>l,default:()=>u,assets:()=>a,toc:()=>c,frontMatter:()=>o});var t=JSON.parse('{"id":"sql-manual/sql-functions/conditional-functions/assert-true","title":"ASSERT_TRUE","description":"\x3c!--","source":"@site/versioned_docs/version-3.0/sql-manual/sql-functions/conditional-functions/assert-true.md","sourceDirName":"sql-manual/sql-functions/conditional-functions","slug":"/sql-manual/sql-functions/conditional-functions/assert-true","permalink":"/docs/3.0/sql-manual/sql-functions/conditional-functions/assert-true","draft":false,"unlisted":false,"tags":[],"version":"3.0","frontMatter":{"title":"ASSERT_TRUE","language":"en"},"sidebar":"docs","previous":{"title":"BIT_SHIFT_RIGHT","permalink":"/docs/3.0/sql-manual/sql-functions/bitwise-functions/bitshiftright"},"next":{"title":"CASE","permalink":"/docs/3.0/sql-manual/sql-functions/conditional-functions/case"}}'),r=s("785893"),i=s("250065");let o={title:"ASSERT_TRUE",language:"en"},l=void 0,a={},c=[{value:"Description",id:"description",level:3},{value:"Syntax",id:"syntax",level:4},{value:"Example",id:"example",level:3},{value:"Keywords",id:"keywords",level:3}];function d(e){let n={code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,r.jsx)(n.h4,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"BOOLEAN assert_true(BOOLEAN condition, VarcharLiteral errmsg)"})}),"\n",(0,r.jsxs)(n.p,{children:["When ",(0,r.jsx)(n.code,{children:"condition"})," is ",(0,r.jsx)(n.code,{children:"true"}),", return ",(0,r.jsx)(n.code,{children:"true"}),". Otherwise throws an error with message ",(0,r.jsx)(n.code,{children:"errmsg"}),".\n",(0,r.jsx)(n.code,{children:"errmsg"})," could only be Literal."]}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:'mysql> select assert_true(1, "wrong");\n+------------------------------------------+\n| assert_true(cast(1 as BOOLEAN), \'wrong\') |\n+------------------------------------------+\n|                                        1 |\n+------------------------------------------+\n1 row in set (0.12 sec)\n\nmysql> select assert_true(1, nullable("wrong"));\nERROR 1105 (HY000): errCode = 2, detailMessage = assert_true only accept constant for 2nd argument\nmysql> select assert_true(0, "wrong");\nERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.8)[INVALID_ARGUMENT][E33] wrong\nmysql> select assert_true(null, "wrong");\nERROR 1105 (HY000): errCode = 2, detailMessage = (10.16.10.8)[INVALID_ARGUMENT][E33] wrong\n'})}),"\n",(0,r.jsx)(n.h3,{id:"keywords",children:"Keywords"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ASSERT_TRUE, ASSERT, TRUE\n"})})]})}function u(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},250065:function(e,n,s){s.d(n,{Z:function(){return l},a:function(){return o}});var t=s(667294);let r={},i=t.createContext(r);function o(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);