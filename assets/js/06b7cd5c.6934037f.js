"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["204017"],{838359:function(e,n,t){t.r(n),t.d(n,{metadata:()=>s,contentTitle:()=>i,default:()=>u,assets:()=>c,toc:()=>o,frontMatter:()=>l});var s=JSON.parse('{"id":"sql-manual/sql-reference/Data-Types/TIME","title":"TIME","description":"\x3c!--","source":"@site/versioned_docs/version-1.2/sql-manual/sql-reference/Data-Types/TIME.md","sourceDirName":"sql-manual/sql-reference/Data-Types","slug":"/sql-manual/sql-reference/Data-Types/TIME","permalink":"/docs/1.2/sql-manual/sql-reference/Data-Types/TIME","draft":false,"unlisted":false,"tags":[],"version":"1.2","frontMatter":{"title":"TIME","language":"en"},"sidebar":"docs","previous":{"title":"DATE","permalink":"/docs/1.2/sql-manual/sql-reference/Data-Types/DATE"},"next":{"title":"DATETIME","permalink":"/docs/1.2/sql-manual/sql-reference/Data-Types/DATETIME"}}'),r=t("785893"),a=t("250065");let l={title:"TIME",language:"en"},i=void 0,c={},o=[{value:"TIME",id:"time",level:2},{value:"name",id:"name",level:3},{value:"description",id:"description",level:3},{value:"example",id:"example",level:3},{value:"keywords",id:"keywords",level:3}];function d(e){let n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"time",children:"TIME"}),"\n",(0,r.jsx)(n.h3,{id:"name",children:"name"}),"\n",(0,r.jsx)(n.p,{children:"TIME"}),"\n",(0,r.jsx)(n.h3,{id:"description",children:"description"}),"\n",(0,r.jsxs)(n.p,{children:["TIME type\n",(0,r.jsx)(n.code,{children:"TIME"})," type that can appear as a query result. Table storage and manual CAST generation are not supported.\nWhen calculating without constant folding, it could represent ",(0,r.jsx)(n.code,{children:"[-838:59:59, 838:59:59]"}),"\u3002"]}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"mysql [(none)]> select timediff('2020-01-01', '2000-01-01');\n+--------------------------------------------------------+\n| timediff('2020-01-01 00:00:00', '2000-01-01 00:00:00') |\n+--------------------------------------------------------+\n| 175320:00:00                                           |\n+--------------------------------------------------------+\n1 row in set (0.00 sec)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"keywords",children:"keywords"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"TIME\n"})})]})}function u(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return i},a:function(){return l}});var s=t(667294);let r={},a=s.createContext(r);function l(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);